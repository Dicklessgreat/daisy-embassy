[package]
name = "daisy-embassy"
version = "0.1.0"
edition = "2021"
authors = ["DicklessGreat<dicklessgreat@gmail.com>"]
description = "async audio development with daisy seed and embassy"
keywords = ["embassy", "async", "audio", "embedded", "no-std"]
repository = "https://github.com/Dicklessgreat/daisy-embassy"
categories = ["embedded"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
embassy-stm32 = { version = "0.1.0", features = ["defmt", "stm32h750ib", "time-driver-tim5", "exti", "memory-x", "unstable-pac", "chrono"] }
embassy-time = { version = "0.3.2", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
embassy-sync = { version = "0.6.0", features = ["defmt"] }
# these are for developing usb_uac example
# embassy-stm32 = { path = "../_third_party/embassy/embassy-stm32", features = ["defmt", "stm32h750ib", "time-driver-tim5", "exti", "memory-x", "unstable-pac", "chrono"] }
# embassy-time = { path = "../_third_party/embassy/embassy-time", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
# embassy-sync = { path = "../_third_party/embassy/embassy-sync", features = ["defmt"] }
cortex-m = "0.7.7"
static_cell = "2.1.0"
defmt = "0.3.8"
grounded = "0.2.0"
wm8731 = "0.1.0"
stm32-fmc = "0.3.0"

[dev-dependencies]
cortex-m = { version = "0.7.6", features = ["inline-asm", "critical-section-single-core"] }
cortex-m-rt = { version = "0.7.0", features = ["device"] }
defmt = "0.3.8"
defmt-rtt = "0.4.1"
panic-probe = { version = "0.3.2", features = ["print-defmt"] }
embassy-executor = { version = "0.6.0", features = ["task-arena-size-32768", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"] }
embassy-futures = "0.1.1"
embassy-usb = "0.3.0"
# these are for developing usb_uac example
# embassy-executor = { path = "../_third_party/embassy/embassy-executor", features = ["task-arena-size-32768", "arch-cortex-m", "executor-thread", "executor-interrupt", "defmt", "integrated-timers"] }
# embassy-futures = { path = "../_third_party/embassy/embassy-futures" }
# embassy-usb = { path = "../_third_party/embassy/embassy-usb" }
embedded-test = { version = "0.4.0", features = ["defmt", "embassy", "external-executor", "panic-handler"] }
critical-section = "1.1"
heapless = { version = "0.8", default-features = false }
micromath = "2.0.0"

[features]
default = ["seed_1_1"]

seed = []
seed_1_1 = []
seed_1_2 = []
patch_sm = []
panic_on_overrun = []
# defmt = []

[patch.crates-io]
embassy-stm32 = { git = "https://github.com/embassy-rs/embassy.git", rev = "ca3d091faf3ef76ea45f88eea5c2a6700378daff" }
embassy-time = { git = "https://github.com/embassy-rs/embassy.git", rev = "ca3d091faf3ef76ea45f88eea5c2a6700378daff" }
embassy-sync = { git = "https://github.com/embassy-rs/embassy.git", rev = "ca3d091faf3ef76ea45f88eea5c2a6700378daff" }
embassy-executor = { git = "https://github.com/embassy-rs/embassy.git", rev = "ca3d091faf3ef76ea45f88eea5c2a6700378daff" }
embassy-futures = { git = "https://github.com/embassy-rs/embassy.git", rev = "ca3d091faf3ef76ea45f88eea5c2a6700378daff" }
embassy-usb = { git = "https://github.com/embassy-rs/embassy.git", rev = "ca3d091faf3ef76ea45f88eea5c2a6700378daff" }

[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true


[[example]]
name = "passthrough"
path = "examples/passthrough.rs"
[[example]]
name = "triangle_wave_tx"
path = "examples/triangle_wave_tx.rs"
[[example]]
name = "blinky"
path = "examples/blinky.rs"
[[example]]
name = "sdram"
path = "examples/sdram.rs"
[[example]]
name = "flash"
path = "examples/flash.rs"
[[example]]
name = "usb_serial"
path = "examples/usb_serial.rs"
[[example]]
name = "looper"
path = "examples/looper.rs"
[[example]]
name = "usb_uac"
path = "examples/_usb_uac.rs"
[[example]]
name = "_minimum_sai"
path = "examples/_minimum_sai.rs"
[[example]]
name = "_minimum_flash"
path = "examples/_minimum_flash.rs"

[[test]]
name = "test"
harness = false
